Pophelper 2.3.0 is a R package that can be used to plot the struture figure. 
The detailed tutorials could be found in: http://www.royfrancis.com/pophelper/articles/index.html

1. Installation
#install the packages 
install.packages(c("devtools","ggplot2","gridExtra","gtable","label.switching","tidyr"),dependencies=T)
install.packages('pophelper')
# load library
library(pophelper)
The next step is to set the working directory. The working directory is a folder that usually contains the run files of interest so as to allow R to access it. 

2. Input files 
(this protocol is specifically for the analysis of fastSTRUCTURE)
The input file for fastSTRUCTURE should be the meanQ file. meanQ file is the file with contribution of each cluster for each sample. 
Note: the meanQ file you are using should be the one with the most likely value of K based on the chooseK.py results. 
(So depending on your data, you may have a different number than 5 for your K value).

pop_k_5_reorder<-readQ('meanQ_5.csv')
#use the 'readQ' in Pophelper to read the data into R and covert to a 'qlist' filetype.
attributes(pop_k_5_reorder[[1]])
#use the 'attributes' to check the facts of the data, like number of individual, the number of k. 

3.Plot the figures 
plotQ(pop_k_5_reorder[1], sortind='all', clustercol=c("coral","steelblue","lightblue","purple","orange"), imgtype = 'pdf')

#pop_k_5_reorder is the qlist
#sortind. Individuals in a plot are by default plotted in the order as in the input data. 
The individuals can be sorted based on the value of any one of the clusters (‘Cluster1’), ‘all’ or ‘label’. The ‘all’ option produces a sort similar to that in the software STRUCTURE. All clusters are taken into account to sort individuals. When using the name of a cluster, like ‘Cluster1’, ‘Cluster2’ etc, all individuals are sorted by value of the specified cluster.
#clustercol. Each cluster gets a distinct colour. You can use clustercol to set up the color. You can check the website to choose the color. 
#imgtype. Normally I save the output as the pdf file. 

Notes(tricky part):
How to group the individuals within the group together? 
The meanQ file does not contain the individual name information, which is also the reason you need the barcode_ID_info. 
Additionally, if you also know the group information for each individual, like in rice, you know the sample is wild rice, weedy rice, cultivated rice, 
and you want to put all the indivdiduals from the same group together in the figure, you need to reform the input file meanQ for analysis. 

1. Prepare the individual information file (as barcode_ID_infor) plus the group information (e.g. population.csv).
2. Combine the individual information file with the meanQ file using excel and make sure the same number and order of individuals (e.g. meanQ_5_original_order.csv).
3. Run the R scripts to reorder the individuals 

#sort the samples with specific group order
p5_ori<-read.csv('meanQ_5_original_order.csv')
group_order<-c('Wild rice', 'US weedy rice-SH', 'US weedy rice-BHA','South Asian weedy rice', 'SE Asian weedy rice','NE Asian weedy rice','Colombian weedy rice', 'indica','aus','japonica','admixed cultivar','Colombian landraces','Colombian commercial rice')
p5_reorder<-p5_ori[order(sapply(p5_ori$Group, function(x) which(x==group_order))),]
write.csv(p5_reorder,'meanQ5_re_order.csv')

4. Remove the Group and individual columes using R or excel.
5. Create the group labels using R. The order of the group information must align to the order of the individuals in the meanQ.

labels_final<-read.csv('meanQ5_re_order.csv',stringsAsFactors = F)
sapply(labels_final, is.character)
g_labels_final<-labels_final[,8,drop=FALSE]

Finally, plot the figure again, this time adding the g_labels_final as the group order with the 'grplab =' command
plotQ(pop_k_5_reorder[1], grplab = g_labels_final, sortind='all', clustercol=c("coral","steelblue","lightblue","purple","orange"), imgtype = 'pdf')


